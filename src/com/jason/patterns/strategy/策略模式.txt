设计模式之策略模式
1、什么是策略模式？
       策略模式是将可变的部分从程序中抽象分离成算法接口，在该接口下分别封装
   一系列算法实现并使他们可以相互替换，从而导致客户端程序独立于算法的改变。
2、什么是组合？
       在类中增加一个私有域，引用另一个已有类的实例，通过调用引用实例的方法从而
   获得新的功能，这种设计被称作组合（复合）。
3、设计原则：
   1）找出应用中需要变化的部分，把他们独立出来，不要和那些不需要变化的代码混在一起。
   2）面向接口编程，而不是面向实现编程
   3）多用组合，少用继承（复合由于继承）
4、实现要点：
   1）通过分离变化得出策略接口
   2）为接口提供不同的实现类
   3）客户程序中有一个策略接口
   4）在客户程序中选择/组装正确的策略接口实现类
5、策略模式的优点：
   1）使用了组合，使架构更加灵活
   2）富有弹性，可以较好的应对变化（开闭原则）
   3）更好的代码复用性（相对于继承）
   4）消除大量的条件语句
6、策略模式的缺点：
   1）客户代码需要了解每个策略实现的细节
   2）增加了对象的数目
7、适用场景：
   1）许多相关的类仅仅是行为差异
   2）运行时选取不同的算法变体
   3）通过条件语句在多个分支中选取一种
   