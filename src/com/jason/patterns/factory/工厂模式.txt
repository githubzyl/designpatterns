设计模式之工厂模式
1、概念：
   1）实例化对象，用工厂方法代替new操作
   2）分类：工厂方法模式和抽象工厂模式
   3）抽象工厂模式是工厂模式的扩展
2、意图：
   1）定义个接口来创建对象，但是让子类来决定哪些类需要被实例化
   2）工厂方法把实例化的工作推迟到子类中去实现
3、应用场景：
   1）有一组对象需要创建
   2）在编码时不能预见需要创建哪种类的实例
   3）系统需要考虑扩展性，不应依赖于产品类实例如何被创建、组合和表达的细节
4、动机（项目中的现状）：
	   在软件系统中经常面临者“对象”的创建，由于需求的变化，这个对象可能随之也会发生变化，但它却拥有比较稳定的接口。
	   为此，我们需要提供一种封装机制来隔离出这个易变对象的变化，从而保持系统中其他依赖于该对象的对象不随着需求的变化而变化。
   基于项目现状，我们应该设计如下：
   	   1）尽量松耦合，一个对象的依赖对象的变化与本身无关
   	   2）具体产品与客户端分离，产品分割    
5、常见应用：
   1）JDBC
   2）spring beanfactory
6、工厂模式和抽象工厂模式的对比：
   1）工厂模式是一种极端情况的抽象工厂模式，而抽象工厂模式可以可以看成是工厂模式的推广
   2）工厂模式是用来创建一个产品的等级结构，而抽象工厂模式是用来创建多个产品的等级结构
   3）工厂模式只有一个抽象产品类，而抽象工厂模式有多个抽象产品类
   